# HVAC Equipment Management Schema

# User table is keyed by Firebase Auth UID.
type User @table {
  # `@default(expr: "auth.uid")` sets it to Firebase Auth UID during insert and upsert.
  id: String! @default(expr: "auth.uid")
  email: String! @col(dataType: "varchar(255)")
  name: String! @col(dataType: "varchar(100)")
  company: String @col(dataType: "varchar(100)")
  # The `user: User!` field in other tables generates one-to-many query fields.
  #  equipment_on_user: [Equipment!]!
  #  customers_on_user: [Customer!]!
  #  maintenanceRecords_on_user: [MaintenanceRecord!]!
}

# Customer information for HVAC projects
type Customer @table {
  id: UUID! @default(expr: "uuidV4()")
  name: String! @col(dataType: "varchar(200)")
  location: String! @col(dataType: "varchar(500)")
  address: String @col(dataType: "text")
  contactPerson: String @col(dataType: "varchar(100)")
  phone: String @col(dataType: "varchar(20)")
  email: String @col(dataType: "varchar(255)")
  createdBy: User!
  createdAt: Date! @default(expr: "request.time")
  updatedAt: Date! @default(expr: "request.time")
  # The `customer: Customer!` field in Equipment generates one-to-many query field.
  #  equipment_on_customer: [Equipment!]!
}

# HVAC Equipment table
type Equipment @table {
  id: UUID! @default(expr: "uuidV4()")
  customer: Customer!
  # The customer field adds the following foreign key field.
  #  customerId: UUID!
  
  # Basic Equipment Information
  qty: Int @default(expr: "1")
  assetType: String! @col(dataType: "varchar(100)")
  manufacturer: String @col(dataType: "varchar(100)")
  model: String @col(dataType: "varchar(100)")
  serialNumber: String @col(dataType: "varchar(100)")
  size: String @col(dataType: "varchar(100)")
  mfgYear: String @col(dataType: "varchar(10)")
  location: String @col(dataType: "varchar(200)")
  notes: String @col(dataType: "text")
  
  # Technical Specifications
  voltage: String @col(dataType: "varchar(50)")
  refrigerant: String @col(dataType: "varchar(50)")
  maintenanceInterval: String @col(dataType: "varchar(50)")
  
  # Filter Information
  filterSize: String @col(dataType: "varchar(50)")
  filterType: String @col(dataType: "varchar(50)")
  filterMerv: String @col(dataType: "varchar(20)")
  filterQuantity: String @col(dataType: "varchar(20)")
  
  # Belt Information
  beltSize: String @col(dataType: "varchar(50)")
  beltQuantity: String @col(dataType: "varchar(20)")
  
  # Maintenance Flags
  requiresFilterChange: Boolean @default(expr: "false")
  requiresCoilCleaning: Boolean @default(expr: "false")
  requiresBeltReplacement: Boolean @default(expr: "false")
  
  # Metadata
  createdBy: User!
  createdAt: Date! @default(expr: "request.time")
  updatedAt: Date! @default(expr: "request.time")
  # The `equipment: Equipment!` field in MaintenanceRecord generates one-to-many query field.
  #  maintenanceRecords_on_equipment: [MaintenanceRecord!]!
}

# Manual Links for equipment documentation
type ManualLink @table {
  id: UUID! @default(expr: "uuidV4()")
  equipment: Equipment!
  # The equipment field adds the following foreign key field.
  #  equipmentId: UUID!
  title: String! @col(dataType: "varchar(200)")
  url: String! @col(dataType: "text")
  description: String @col(dataType: "text")
  source: String @col(dataType: "varchar(100)")
  createdAt: Date! @default(expr: "request.time")
}

# Maintenance Records for tracking service history
type MaintenanceRecord @table {
  id: UUID! @default(expr: "uuidV4()")
  equipment: Equipment!
  # The equipment field adds the following foreign key field.
  #  equipmentId: UUID!
  user: User!
  # The user field adds the following foreign key field.
  #  userId: String!
  
  # Maintenance Details
  maintenanceType: String! @col(dataType: "varchar(50)") # "filter_change", "coil_cleaning", "belt_replacement", etc.
  description: String @col(dataType: "text")
  notes: String @col(dataType: "text")
  performedDate: Date! @default(expr: "request.time")
  nextDueDate: Date
  
  # Service Details
  technician: String @col(dataType: "varchar(100)")
  serviceHours: Float
  partsUsed: String @col(dataType: "text")
  cost: Float
  
  # Status
  status: String! @col(dataType: "varchar(20)") @default(expr: "'completed'") # "scheduled", "in_progress", "completed", "cancelled"
  createdAt: Date! @default(expr: "request.time")
  updatedAt: Date! @default(expr: "request.time")
}
